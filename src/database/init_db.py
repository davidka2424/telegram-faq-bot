# import sqlite3
# import os
# from pathlib import Path

# def create_tables(db_path: str):
#     """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
#     conn = sqlite3.connect(db_path)
#     cursor = conn.cursor()
    
#     cursor.execute('''
#         CREATE TABLE IF NOT EXISTS faq (
#             id INTEGER PRIMARY KEY AUTOINCREMENT,
#             question TEXT NOT NULL,
#             answer TEXT NOT NULL
#         )
#     ''')
    
#     conn.commit()
#     conn.close()
#     print(f"‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –≤ {db_path}")

# def init_database(db_path: str):
#     """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: —Å–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –∏ —Ç–∞–±–ª–∏—Ü—ã"""
#     # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
#     os.makedirs(os.path.dirname(db_path), exist_ok=True)
    
#     # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
#     create_tables(db_path)


#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

# –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –∏–∑ src
from src.config import DB_PATH
from src.database.init_db import init_database
from src.database.db import add_faq_item

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
SAMPLE_FAQ = [
    ("–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?", "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ."),
    ("–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ?", "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã Visa, MasterCard, –ú–ò–† –∏ –Ω–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏."),
    ("–ö–∞–∫ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—Å—ã–ª–∫—É?", "–û—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –ø–æ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä—É –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."),
    ("–ö–∞–∫–æ–π —É –≤–∞—Å –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã?", "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å 8:00 –¥–æ 18:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏, –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö."),
    ("–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —è –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å?", "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è' –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞."),
]

def main():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üîÑ –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î (—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã)
    init_database(DB_PATH)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã
    for question, answer in SAMPLE_FAQ:
        add_faq_item(DB_PATH, question, answer)
    
    print(f"‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∑–∞–ø–æ–ª–Ω–µ–Ω–∞! –î–æ–±–∞–≤–ª–µ–Ω–æ {len(SAMPLE_FAQ)} –≤–æ–ø—Ä–æ—Å–æ–≤.")

if __name__ == "__main__":
    main()